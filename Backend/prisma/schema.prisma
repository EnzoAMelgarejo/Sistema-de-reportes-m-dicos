// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum Status {
  PENDING
  IN_PROGRESS
  RESOLVED
  CLOSED
}

enum Category {
  BUG
  STORY
  DOCUMENTATION
  IMPROVEMENT
  TASK
}

model Report {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  priority  Priority @default(MEDIUM)
  status    Status   @default(PENDING)
  category  Category @default(BUG)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId   Int
  assignedId Int?

  author   User  @relation("AuthorReports", fields: [authorId], references: [id])
  assignee User? @relation("AssigneeReports", fields: [assignedId], references: [id])

  attachments Attachment[] //One-to-many relationship
}

model Attachment {
  id       Int    @id @default(autoincrement())
  url      String // File path or cloud URL
  filename String // Original file name
  report   Report @relation(fields: [reportId], references: [id])
  reportId Int
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  auth0Id   String   @unique
  email     String   @unique
  role      Role     @default(USER)
  reports   Report[] @relation("AuthorReports")
  assigned  Report[] @relation("AssigneeReports")
  createdAt DateTime @default(now())
  isActive  Boolean  @default(true)
}

enum Role {
  USER
  ADMIN
}
